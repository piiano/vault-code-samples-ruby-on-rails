# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with NPM
# For more information see: https://github.com/actions/setup-ruby

name: Publish

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      vault_version:
        description: "Vault version"
        required: true
        type: string
      bump-package:
        description: |-
          How to bump `django-encryption` version:
          - `none` - do not bump version and do not publish
          - `patch` - bump patch version
          - `minor` - bump minor version
          - `major` - bump major version
        default: patch
        type: choice
        options:
          - none
          - patch
          - minor
          - major

env:
  PVAULT_SERVICE_LICENSE: ${{ secrets.PVAULT_SERVICE_LICENSE }}
  PVAULT_API_KEY: ${{ secrets.PVAULT_API_KEY }}

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.1.3']

    steps:
      - name: Check Out Repo.
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.CICD_RELEASES_PAT }}

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}

      - name: Update vault version
        run: |
            sed -i -E "s|pvault-dev:[0-9]+\.[0-9]+\.[0-9]+|pvault-dev:${{ inputs.vault_version }}|g" Makefile

      - name: generate sdk (will also download latest openapi.yaml)
        run: make generate-sdk

      - name: run tests
        run: make app-test

      - name: Update README Vault version ${{ inputs.vault_version }}
        env:
          LINE: compatible with Vault version
        if: github.event_name == 'workflow_dispatch'
        run: |
          sed -i -E "s|$LINE [0-9]+\.[0-9]+\.[0-9]+|$LINE ${{ inputs.vault_version }}|g" README.md

      - name: Update README to reference demo version upgrade ${{ inputs.bump-package }}
        env:
          LINE: This demo application version is
        if: github.event_name == 'workflow_dispatch' && inputs.bump-package != 'none'
        run: |
          # find current version
          CUR_VER=`sed -n "s/$LINE \([^ ]*\).*/\1/p" README.md`
          NEXT_VER=`npx --yes semver -i  ${{ inputs.bump-package }} ${CUR_VER}`
          sed -i -E "s|$LINE [0-9]+\.[0-9]+\.[0-9]+|$LINE $NEXT_VER|g" README.md
      
      - name: Commit and push changes
        # even though we're checking for workflow_dispatch we still want to be extra safe and
        # make sure we don't push changes to workflow that is triggered by push event.
        if: github.event_name == 'workflow_dispatch' && github.event_name != 'push'
        run: |
          git config --global user.email "cicd@piiano.com"
          git config --global user.name "Github Actions"
          git_status=$(git status -s)
          if [ -n "$git_status" ]; then
            echo "There are changes to commit"
            git add README.md Makefile
            git commit -a -m 'Update README.md and Makefilefiles to Vault version ${{ inputs.vault_version }}'
            git push
          else
            echo "No changes to commit"
          fi
